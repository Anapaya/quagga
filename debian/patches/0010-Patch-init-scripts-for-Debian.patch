From: Brett Parker <iDunno@sommitrealweird.co.uk>
Date: Sat, 31 Mar 2018 14:21:41 +0100
Subject: Patch init scripts for Debian

---
 redhat/bgpd.init        | 40 +++++++++++++++++++++-------------------
 redhat/isisd.init       | 40 +++++++++++++++++++++-------------------
 redhat/ospf6d.init      | 40 +++++++++++++++++++++-------------------
 redhat/ospfd.init       | 40 +++++++++++++++++++++-------------------
 redhat/pimd.init        | 40 +++++++++++++++++++++-------------------
 redhat/quagga.sysconfig |  4 ++--
 redhat/ripd.init        | 40 +++++++++++++++++++++-------------------
 redhat/ripngd.init      | 40 +++++++++++++++++++++-------------------
 redhat/watchquagga.init | 37 +++++++++++++++++++------------------
 redhat/zebra.init       | 40 +++++++++++++++++++++-------------------
 10 files changed, 189 insertions(+), 172 deletions(-)

diff --git a/redhat/bgpd.init b/redhat/bgpd.init
index e18511a..d55333d 100644
--- a/redhat/bgpd.init
+++ b/redhat/bgpd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: bgpd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: BGP routing engine
 # Description: BGP routing engine for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="bgpd"
-cmd=bgpd
-LOCK_FILE=/var/lock/subsys/bgpd
+cmd=/usr/sbin/bgpd
+LOCK_FILE=/var/lock/quagga/bgpd
 CONF_FILE=/etc/quagga/bgpd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $BGPD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon -- $cmd -d $BGPD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/isisd.init b/redhat/isisd.init
index 9e80530..e5b6160 100644
--- a/redhat/isisd.init
+++ b/redhat/isisd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: isisd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: IS-IS routing engine
 # Description: IS-IS routing engine for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="isisd"
-cmd=isisd
-LOCK_FILE=/var/lock/subsys/isisd
+cmd=/usr/sbin/isisd
+LOCK_FILE=/var/lock/quagga/isisd
 CONF_FILE=/etc/quagga/isisd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $ISISD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon -- $cmd -d $ISISD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/ospf6d.init b/redhat/ospf6d.init
index 4133b4a..a44d4a8 100644
--- a/redhat/ospf6d.init
+++ b/redhat/ospf6d.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: ospf6d
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: OSPF routing engine for IPv6
 # Description: OSPF routing engine for use with Zebra and IPv6
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="ospf6d"
-cmd=ospf6d
-LOCK_FILE=/var/lock/subsys/ospf6d
+cmd=/usr/sbin/ospf6d
+LOCK_FILE=/var/lock/quagga/ospf6d
 CONF_FILE=/etc/quagga/ospf6d.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $OSPF6D_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon -- $cmd -d $OSPF6D_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/ospfd.init b/redhat/ospfd.init
index d964f38..ce88838 100644
--- a/redhat/ospfd.init
+++ b/redhat/ospfd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: ospfd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: OSPF routing engine
 # Description: OSPF routing engine for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="ospfd"
-cmd=ospfd
-LOCK_FILE=/var/lock/subsys/ospfd
+cmd=/usr/sbin/ospfd
+LOCK_FILE=/var/lock/quagga/ospfd
 CONF_FILE=/etc/quagga/ospfd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $OSPFD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon $cmd -d $OSPFD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/pimd.init b/redhat/pimd.init
index 49f9075..5ea5c3c 100644
--- a/redhat/pimd.init
+++ b/redhat/pimd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: pimd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: PIM multicast routing engine
 # Description: PIM routing engine for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="pimd"
-cmd=pimd
-LOCK_FILE=/var/lock/subsys/pimd
+cmd=/usr/sbin/pimd
+LOCK_FILE=/var/lock/quagga/pimd
 CONF_FILE=/etc/quagga/pimd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $PIMD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon -- $cmd -d $PIMD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/quagga.sysconfig b/redhat/quagga.sysconfig
index 8353b13..de4a099 100644
--- a/redhat/quagga.sysconfig
+++ b/redhat/quagga.sysconfig
@@ -15,7 +15,7 @@ PIMD_OPTS="-A 127.0.0.1"
 # system startup to chmod config files.
 QUAGGA_USER=quagga
 QUAGGA_GROUP=quagga
-VTY_GROUP=
+VTY_GROUP=quaggavty
 
 # Watchquagga configuration for LSB initscripts
 #
@@ -28,4 +28,4 @@ VTY_GROUP=
 #WATCH_DAEMONS="zebra bgpd ospfd ospf6d ripd ripngd"
 #
 # Timer values can be adjusting by editing this line:
-WATCH_OPTS="-Az -b_ -r/sbin/service_%s_restart -s/sbin/service_%s_start -k/sbin/service_%s_stop"
+WATCH_OPTS="-Az -b_ -r '/usr/sbin/invoke-rc.d %s restart' -s '/usr/sbin/invoke-rc.d %s start' -k '/usr/sbin/invoke-rc.d %s stop'"
diff --git a/redhat/ripd.init b/redhat/ripd.init
index 9b412cb..b83e669 100644
--- a/redhat/ripd.init
+++ b/redhat/ripd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: ripd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: RIP routing engine
 # Description: RIP routing engine for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="ripd"
-cmd=ripd
-LOCK_FILE=/var/lock/subsys/ripd
+cmd=/usr/sbin/ripd
+LOCK_FILE=/var/lock/quagga/ripd
 CONF_FILE=/etc/quagga/ripd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $RIPD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon $cmd -d $RIPD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/ripngd.init b/redhat/ripngd.init
index 88f346f..1341b75 100644
--- a/redhat/ripngd.init
+++ b/redhat/ripngd.init
@@ -4,49 +4,51 @@
 
 ### BEGIN INIT INFO
 # Provides: ripngd
+# Required-Start:    $remote_fs $syslog $network zebra
+# Required-Stop:     $remote_fs $syslog $network zebra
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: RIP routing engine for IPv6
 # Description: RIP routing engine for use with Zebra and IPv6
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="ripngd"
-cmd=ripngd
-LOCK_FILE=/var/lock/subsys/ripngd
+cmd=/usr/sbin/ripngd
+LOCK_FILE=/var/lock/quagga/ripngd
 CONF_FILE=/etc/quagga/ripngd.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $RIPNGD_OPTS -f $CONF_FILE
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon $cmd -d $RIPNGD_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -61,7 +63,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/watchquagga.init b/redhat/watchquagga.init
index dda3506..bed9c78 100644
--- a/redhat/watchquagga.init
+++ b/redhat/watchquagga.init
@@ -3,44 +3,45 @@
 
 ### BEGIN INIT INFO
 # Provides: watchquagga
+# Required-Start:    $remote_fs $syslog $network
+# Required-Stop:     $remote_fs $syslog $network
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: Quagga watchdog
 # Description: Quagga watchdog for use with Zebra
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="watchquagga"
-cmd=watchquagga
-LOCK_FILE=/var/lock/subsys/watchquagga
+cmd=/usr/sbin/watchquagga
+LOCK_FILE=/var/lock/quagga/watchquagga
+
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
 
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
 	# Check that there are daemons to be monitored.
-	[ -z "$WATCH_DAEMONS" ] && exit 1
+	[ -z "$WATCH_DAEMONS" ] && exit 0
 
-	echo -n $"Starting $PROG: "
-	daemon $cmd -d $WATCH_OPTS $WATCH_DAEMONS
+	log_daemon_msg "Starting $PROG" "$PROG"
+	start_daemon $cmd -d $WATCH_OPTS $WATCH_DAEMONS
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -55,7 +56,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
diff --git a/redhat/zebra.init b/redhat/zebra.init
index 4242b16..55450c6 100644
--- a/redhat/zebra.init
+++ b/redhat/zebra.init
@@ -4,50 +4,52 @@
 
 ### BEGIN INIT INFO
 # Provides: zebra
+# Required-Start:    $remote_fs $syslog $network
+# Required-Stop:     $remote_fs $syslog $network
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
 # Short-Description: GNU Zebra routing manager
 # Description: GNU Zebra routing manager
 ### END INIT INFO
 
 # source function library
-. /etc/rc.d/init.d/functions
-
-# Get network config
-. /etc/sysconfig/network
+. /lib/lsb/init-functions
 
 # quagga command line options
-. /etc/sysconfig/quagga
+. /etc/default/quagga
 
 RETVAL=0
 PROG="zebra"
-cmd=zebra
-LOCK_FILE=/var/lock/subsys/zebra
+cmd=/usr/sbin/zebra
+LOCK_FILE=/var/lock/quagga/zebra
 CONF_FILE=/etc/quagga/zebra.conf
 
+[ -d /var/lock/quagga ] || mkdir /var/lock/quagga
+[ -d /run/quagga ] || ( mkdir /run/quagga && chown quagga:quagga /run/quagga )
+
+# if the config file doesn't exist, exit immediately
+[ -f "$CONF_FILE" ] || exit 0
+
 case "$1" in
   start)
-	# Check that networking is up.
-	[ "${NETWORKING}" = "no" ] && exit 1
-
-	# The process must be configured first.
-	[ -f $CONF_FILE ] || exit 6
 	if [ `id -u` -ne 0 ]; then
 		echo $"Insufficient privilege" 1>&2
 		exit 4
 	fi
 
-	echo -n $"Starting $PROG: "
+	log_daemon_msg "Starting $PROG" "$PROG"
 	/sbin/ip route flush proto zebra
-	daemon $cmd -d $ZEBRA_OPTS -f $CONF_FILE
+	start_daemon $cmd -d $ZEBRA_OPTS -f $CONF_FILE
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   stop)
-	echo -n $"Shutting down $PROG: "
-	killproc $cmd
+	log_daemon_msg "Shutting down $PROG" "$PROG"
+	killproc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	[ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
-	echo
+	log_end_msg $RETVAL
 	;;
   restart|reload|force-reload)
 	$0 stop
@@ -62,7 +64,7 @@ case "$1" in
 	RETVAL=$?
 	;;
   status)
-	status $cmd
+	status_of_proc -p /run/quagga/$PROG.pid $cmd
 	RETVAL=$?
 	;;
   *)
